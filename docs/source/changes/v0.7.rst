*******************
What's New in v0.7?
*******************

v0.7.2
------

    Photometry:
        -   Reincluding CRIT_SEP parameter into source grouping

        -   _Grouper overloading class adding into PSFPhot_Routine

        -   Added error array to PSF photometry

        -   Added image array masking

Minor Changes:
    -   Converting long parameter keys to COMMENT cards in output header files (utils.collapse_header)

    -   Moved image unit scaling to prepare_image_arrays in aperture and psf photometry

v0.7.1
------

Minor Changes:
    -   Parameter file now includes generated version number.

    -   Incremented miri apcorr version number

    -   Incremented nircam abvegaoffset number

    -   PSF photometry now returns flux not flux_fit

Bug Fixes:
    -   Generic matching wasn't adding stdflux into the output table

    -   --generate-run was didnt have all the neccessary input, now it does

    -   --calc-instr-zp tables needed RADEC and they werent getting them, now they do


v0.7.0
------

Matching:
    The core matching package is having a bit of an overhaul to make it a little bit simpler to use.

    -   generic_match -> GenericMatch class

    -   cascade_match -> CascadeMatch class

    -   band_match -> BandMatch class

    -   dither_match -> deprecated

    -   GenericMatch.finish_matching now takes column name for the values to go into the photometric error calculation.
        This allows the user to set whether the errors come from the std or eFILTER columns at the entry point 

    -   Verbose flag passed properly now

    -   Moved all core matching into _match

    -   Added -m"masking" to starbug2-match entry point and GenericMatch. This is still very experimental

Entry Points:
    The bin.match entry point now has the new classes incorporated into it.
    Band matching still needs a bit of work to fully reimplement the original functionality
    back into it. For now, `--band-depr` can be used to continue using the old method


Artificial Stars:
    Setting out the groundwork for artificial star testing. 

    -   Artificial_Stars class added

Minor Changes:
    -   utils.hcascade now uses MaskedColumn 

    -   utils.import_table now uses utils.fill_nan rather than doing its own thing

    -   utils.find_filter now checks meta data too

    -   utils.rmduplicates: function added for simple list cleaning duplicate values

Bug Fixes:
    -   starbug main ncores now catches if the value is less than zero

Still To Do
-----------
-   Integrate Artificial_Stars class into starbug.py and ~starbug2

-   Do some matching tests

